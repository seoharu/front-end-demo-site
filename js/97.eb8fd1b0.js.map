{"version":3,"file":"js/97.eb8fd1b0.js","mappings":"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","sources":["webpack://wsd02/./src/composables/useMovies.ts","webpack://wsd02/./src/components/common/PaginationNav.vue","webpack://wsd02/./src/components/common/PaginationNav.vue?031d","webpack://wsd02/./src/components/common/viewType/InfiniteScrollView.vue","webpack://wsd02/./src/components/common/viewType/InfiniteScrollView.vue?1628","webpack://wsd02/./src/components/common/viewType/TableView.vue","webpack://wsd02/./src/components/common/viewType/TableView.vue?11ae","webpack://wsd02/./src/components/common/viewType/ViewToggle.vue","webpack://wsd02/./src/components/common/viewType/ViewToggle.vue?c867","webpack://wsd02/./node_modules/core-js/internals/get-iterator-flattenable.js","webpack://wsd02/./node_modules/core-js/modules/es.iterator.flat-map.js","webpack://wsd02/./node_modules/core-js/modules/esnext.iterator.flat-map.js"],"sourcesContent":["import { ref, computed } from 'vue'\nimport axios from 'axios'\n\ninterface Movie {\n  id: number\n  title: string\n  poster_path: string\n  release_date: string\n  vote_average: number\n  overview: string\n  genre_ids: number[]\n  rating: { min: number; max: number; } | null;\n}\n\ninterface MovieResponse {\n  results: Movie[]\n  page: number\n  total_pages: number\n  total_results: number\n}\n\nexport function useMovies() {\n  const movies = ref<Movie[]>([])\n  const loading = ref(false)\n  const error = ref<string | null>(null)\n  const totalPages = ref(0)\n  const totalResults = ref(0)\n  const currentPage = ref(1)\n  const apiKey = localStorage.getItem('TMDb-Key')\n\n  // API 기본 설정\n  const api = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: apiKey,\n      language: 'ko-KR'\n    }\n  })\n\n  // 영화 데이터 가져오기 - Popular\n  const fetchPopularMovies = async (page = 1) => {\n    loading.value = true\n    error.value = null\n\n    try {\n      const response = await api.get<MovieResponse>('/movie/popular', {\n        params: { page }\n      })\n\n      if (response.data) {\n        // 데이터 업데이트\n        movies.value = response.data.results\n        totalPages.value = response.data.total_pages\n        totalResults.value = response.data.total_results\n        currentPage.value = page\n\n        console.log('Fetched page:', page, {\n          currentPage: currentPage.value,\n          totalPages: totalPages.value,\n          hasMore: hasMore.value,\n          moviesCount: movies.value.length\n        })\n\n        return response.data\n      }\n    } catch (e) {\n      console.error('Error fetching movies:', e)\n      error.value = e instanceof Error ? e.message : '영화 정보를 불러오는데 실패했습니다.'\n      throw e\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // 테이블 뷰용 여러 페이지 데이터 한번에 가져오기\n  const fetchMoviesForTableView = async (pageCount = 5) => {\n    loading.value = true\n    try {\n      const requests = Array.from(\n        { length: pageCount },\n        (_, i) => api.get<MovieResponse>('/movie/popular', {\n          params: { page: i + 1 }\n        })\n      )\n\n      const responses = await Promise.all(requests)\n      const allResults = responses.flatMap(response => response.data.results)\n\n      movies.value = allResults\n      totalPages.value = Math.ceil(allResults.length / 20)\n      totalResults.value = allResults.length\n      currentPage.value = 1\n\n      return allResults\n    } catch (e) {\n      error.value = e instanceof Error ? e.message : '영화 정보를 불러오는데 실패했습니다.'\n      console.error('Error fetching movies for table view:', e)\n      return []\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // 현재 페이지의 영화 목록 가져오기\n  const getMoviesForPage = (page: number) => {\n    const itemsPerPage = 20;\n    const start = (page - 1) * itemsPerPage\n    const end = start + itemsPerPage\n    return movies.value.slice(start, end)\n  }\n\n  // 무한 스크롤용 영화 추가 로드\n  const loadMoreMovies = async (page: number = currentPage.value + 1) => {\n    if (loading.value || page > totalPages.value) return\n\n    loading.value = true\n    try {\n      const response = await api.get<MovieResponse>('/movie/popular', {\n        params: { page }\n      })\n      if (response.data) {\n        movies.value = [...movies.value, ...response.data.results]\n        totalPages.value = response.data.total_pages\n        totalResults.value = response.data.total_results\n        currentPage.value = response.data.page\n      }\n    } catch (e) {\n      error.value = e instanceof Error ? e.message : '추가 영화 정보를 불러오는데 실패했습니다.'\n      console.error('Error loading more movies:', e)\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // 나머지 함수들은 그대로 유지...\n  const filterMoviesByGenre = async (genreId: number, page = 1) => {\n    loading.value = true\n    try {\n      const response = await api.get<MovieResponse>('/discover/movie', {\n        params: {\n          with_genres: genreId,\n          page,\n          sort_by: 'popularity.desc'\n        }\n      })\n      if (response.data) {\n        movies.value = response.data.results\n        totalPages.value = response.data.total_pages\n        totalResults.value = response.data.total_results\n        currentPage.value = page\n      }\n    } catch (e) {\n      error.value = e instanceof Error ? e.message : '장르별 영화를 불러오는데 실패했습니다.'\n      console.error('Error filtering movies by genre:', e)\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const searchMovies = async (query: string, page = 1) => {\n    if (!query.trim()) return\n\n    loading.value = true\n    try {\n      const response = await api.get<MovieResponse>('/search/movie', {\n        params: {\n          query,\n          page\n        }\n      })\n      if (response.data) {\n        movies.value = response.data.results\n        totalPages.value = response.data.total_pages\n        totalResults.value = response.data.total_results\n        currentPage.value = page\n      }\n    } catch (e) {\n      error.value = e instanceof Error ? e.message : '영화 검색에 실패했습니다.'\n      console.error('Error searching movies:', e)\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const getMovieDetails = async (movieId: number) => {\n    loading.value = true\n    try {\n      const response = await api.get(`/movie/${movieId}`)\n      return response.data\n    } catch (e) {\n      error.value = e instanceof Error ? e.message : '영화 상세 정보를 불러오는데 실패했습니다.'\n      console.error('Error fetching movie details:', e)\n      return null\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const resetMovies = () => {\n    movies.value = []\n    currentPage.value = 1\n    totalPages.value = 0\n    totalResults.value = 0\n    error.value = null\n  }\n\n  // Computed Properties\n  const hasMore = computed(() => currentPage.value < totalPages.value)\n  const isEmpty = computed(() => movies.value.length === 0)\n\n  return {\n    movies,\n    loading,\n    error,\n    currentPage,\n    totalPages,\n    totalResults,\n    fetchPopularMovies,\n    loadMoreMovies,\n    filterMoviesByGenre,\n    searchMovies,\n    getMovieDetails,\n    resetMovies,\n    fetchMoviesForTableView,\n    getMoviesForPage,\n    hasMore,\n    isEmpty\n  }\n}","<template>\n  <div class=\"flex items-center justify-center gap-2 my-4\">\n    <!-- 이전 페이지 그룹 -->\n    <button\n      v-if=\"showPrevGroup\"\n      @click=\"goToPage(startPage - 1)\"\n      class=\"pagination-button\"\n      aria-label=\"이전 페이지 그룹\"\n    >\n      <i class=\"fas fa-chevron-left\"></i>\n    </button>\n\n    <!-- 첫 페이지 -->\n    <button\n      v-if=\"startPage > 1\"\n      @click=\"goToPage(1)\"\n      class=\"pagination-button\"\n    >\n      1\n    </button>\n\n     <!-- 첫 페이지 이후 줄임표 -->\n    <span v-if=\"startPage > 2\" class=\"px-2\">...</span>\n\n    <!-- 페이지 번호들 -->\n    <button\n      v-for=\"page in visiblePages\"\n      :key=\"page\"\n      @click=\"goToPage(page)\"\n      class=\"pagination-button\"\n      :class=\"{ 'bg-blue-500 text-white': page === currentPage }\"\n    >\n      {{ page }}\n    </button>\n\n    <!-- 마지막 페이지 이전 줄임표 -->\n    <span v-if=\"endPage < totalPages - 1\" class=\"px-2\">...</span>\n\n    <!-- 마지막 페이지 -->\n    <button\n      v-if=\"endPage < totalPages\"\n      @click=\"goToPage(totalPages)\"\n      class=\"pagination-button\"\n    >\n      {{ totalPages }}\n    </button>\n\n    <!-- 다음 페이지 그룹 -->\n    <button\n      v-if=\"showNextGroup\"\n      @click=\"goToPage(endPage + 1)\"\n      class=\"pagination-button\"\n      aria-label=\"다음 페이지 그룹\"\n    >\n      <i class=\"fas fa-chevron-right\"></i>\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\n\nconst props = defineProps({\n  currentPage: {\n    type: Number,\n    required: true\n  },\n  totalPages: {\n    type: Number,\n    required: true\n  },\n  visiblePages: {\n    type: Number,\n    default: 5\n  }\n});\n\nconst emit = defineEmits(['page-change']);\n\n// 시작 페이지 계산\nconst startPage = computed(() => {\n  const half = Math.floor(props.visiblePages / 2);\n  let start = props.currentPage - half;\n\n  if (start < 1) {\n    start = 1;\n  }\n\n  if (start + props.visiblePages - 1 > props.totalPages) {\n    start = Math.max(1, props.totalPages - props.visiblePages + 1);\n  }\n\n  return start;\n});\n\n// 끝 페이지 계산\nconst endPage = computed(() => {\n  return Math.min(startPage.value + props.visiblePages - 1, props.totalPages);\n});\n\n// 보여질 페이지 번호들\nconst visiblePages = computed(() => {\n  const pages = [];\n  for (let i = startPage.value; i <= endPage.value; i++) {\n    pages.push(i);\n  }\n  return pages;\n});\n\n// 이전/다음 그룹 버튼 표시 여부\nconst showPrevGroup = computed(() => startPage.value > 1);\nconst showNextGroup = computed(() => endPage.value < props.totalPages);\n\n// 페이지 이동 함수\nconst goToPage = (page) => {\n  if (page !== props.currentPage && page >= 1 && page <= props.totalPages) {\n    emit('page-change', page);\n  }\n};\n</script>\n\n<style scoped>\n.pagination-button {\n  @apply px-3 py-1 rounded-md transition-colors duration-200\n         hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500;\n}\n\n.pagination-button.active {\n  @apply bg-blue-500 text-white hover:bg-blue-600;\n}\n</style>\n","import script from \"./PaginationNav.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationNav.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PaginationNav.vue?vue&type=style&index=0&id=22a6a870&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-22a6a870\"]])\n\nexport default __exports__","<template>\n  <div class=\"infinite-scroll-view\">\n    <!-- 영화 그리드 -->\n    <div class=\"movie-grid\">\n      <MovieCard\n        v-for=\"movie in movies\"\n        :key=\"movie.id\"\n        :movie=\"movie\"\n        @wishlist-updated=\"$emit('wishlist-updated', $event)\"\n        @show-detail=\"handleShowDetail\"\n        @click=\"showPosterOverlay(movie)\"\n        class=\"movie-card-animation\"\n      >\n\n      <div class=\"action-buttons-container\">\n          <WishlistClick\n            :movie=\"movie\"\n            class=\"action-button wishlist-button\"\n            @wishlist-updated=\"handleWishlistUpdate\"\n          />\n          <button\n            @click.stop=\"handleShowDetail(movie)\"\n            class=\"action-button info-button\"\n          >\n            <i class=\"fas fa-info-circle\"></i>\n            <span>상세정보</span>\n          </button>\n      </div>\n      </MovieCard>\n    </div>\n\n    <!-- 포스터 오버레이 -->\n    <div\n      v-if=\"selectedMovie\"\n      class=\"poster-overlay\"\n      :class=\"{ show: showOverlay }\"\n      @click=\"closePosterOverlay\"\n    >\n      <div class=\"poster-content\" @click.stop>\n        <img\n          :src=\"`https://image.tmdb.org/t/p/original${selectedMovie.poster_path}`\"\n          :alt=\"selectedMovie.title\"\n        />\n        <div class=\"poster-info\">\n          <h2>{{ selectedMovie.title }}</h2>\n          <p class=\"release-date\">개봉일: {{ selectedMovie.release_date }}</p>\n          <p class=\"overview\">{{ selectedMovie.overview }}</p>\n        </div>\n        <button class=\"close-button\" @click=\"closePosterOverlay\">\n          <i class=\"fas fa-times\"></i>\n        </button>\n      </div>\n    </div>\n\n    <!-- 로딩 스피너 -->\n    <div v-if=\"loading\" class=\"loading-container\">\n      <div class=\"loading-spinner\"></div>\n      <p class=\"loading-text\">새로운 영화를 탐색하는 중...</p>\n    </div>\n\n    <!-- 끝 메시지 -->\n    <div\n      v-if=\"!loading && !hasMore && movies.length > 0\"\n      class=\"end-message\"\n    >\n      <i class=\"fas fa-check-circle\"></i>\n      <span>모든 영화를 불러왔습니다</span>\n    </div>\n\n    <!-- 맨 위로 버튼 -->\n    <button\n      v-show=\"showScrollTop\"\n      class=\"scroll-top-button\"\n      @click=\"scrollToTop\"\n      aria-label=\"맨 위로 스크롤\"\n    >\n      <i class=\"fas fa-arrow-up\"></i>\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport MovieCard from \"@/components/common/MovieCard.vue\";\nimport { useMovies } from \"@/composables/useMovies\";\nimport WishlistClick from \"@/components/common/WishlistClick.vue\";\n\nconst emit = defineEmits(['wishlist-updated', 'show-detail']);\nconst showScrollTop = ref(false);\n\n// useMovies composable 사용\nconst {\n  movies,\n  loading,\n  hasMore,\n  fetchPopularMovies,\n  loadMoreMovies\n} = useMovies();\n\n// 스크롤 핸들러\nconst handleScroll = () => {\n  showScrollTop.value = window.scrollY > 500;\n\n  // 무한 스크롤 로직\n  const scrollPosition = window.scrollY + window.innerHeight;\n  const documentHeight = document.documentElement.scrollHeight;\n\n  if (scrollPosition >= documentHeight - 200 && hasMore.value && !loading.value) {\n    loadMoreMovies();\n  }\n};\n\n// 맨 위로 스크롤\nconst scrollToTop = () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth'\n  });\n};\n\nconst handleShowDetail = (movie) => {\n  emit('show-detail', movie.id);\n};\n\n// 포스터 오버레이 관련 상태\nconst selectedMovie = ref(null);\nconst showOverlay = ref(false);\n\n// 포스터 오버레이 표시/숨김\nconst showPosterOverlay = (movie) => {\n  selectedMovie.value = movie;\n  showOverlay.value = true;\n  document.body.style.overflow = 'hidden';\n};\n\nconst closePosterOverlay = () => {\n  showOverlay.value = false;\n  document.body.style.overflow = '';\n  setTimeout(() => {\n    selectedMovie.value = null;\n  }, 300);\n};\n\n// ESC 키로 오버레이 닫기\nconst handleKeyDown = (e) => {\n  if (e.key === 'Escape' && showOverlay.value) {\n    closePosterOverlay();\n  }\n};\n\n// 초기 데이터 로드 및 이벤트 리스너 설정\nonMounted(() => {\n  fetchPopularMovies();\n  window.addEventListener('scroll', handleScroll);\n  window.addEventListener('keydown', handleKeyDown);\n});\n\nonUnmounted(() => {\n  window.removeEventListener('scroll', handleScroll);\n  window.removeEventListener('keydown', handleKeyDown);\n  document.body.style.overflow = '';\n});\n\n\n</script>\n\n<style scoped>\n.infinite-scroll-view {\n  min-height: 100vh;\n  padding: 16px;\n  margin-top: 50px;\n  background: linear-gradient(to bottom, #f8f9fa, #e9ecef);\n  max-width: 2000px;\n}\n\n:deep(.movie-card) {\n  position: relative;\n  border-radius: 12px;\n  overflow: hidden;\n  background-color: white;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n  cursor: pointer;\n}\n\n.movie-card {\n  padding: 10px !important;\n}\n:deep(.movie-card img) {\n  width: 100%;\n  height: 60%;\n  display: block;\n  aspect-ratio: 2/3;\n  object-fit: cover;\n}\n\n.movie-card-animation:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 12px 20px rgba(0, 0, 0, 0.15);\n}\n\n.movie-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  gap: 16px;\n  padding: 8px;\n  margin-bottom: 32px;\n}\n\n/* 반응형 그리드 */\n@media (min-width: 1400px) {\n  .movie-grid {\n    grid-template-columns: repeat(5, 1fr);\n    max-width: 1800px;\n    margin: 0 auto;\n    gap: 10px;\n  }\n}\n\n@media (max-width: 1399px) {\n  .movie-grid {\n    grid-template-columns: repeat(5, 1fr);\n    gap: 25px;\n  }\n}\n\n@media (max-width: 1200px) {\n  .movie-grid {\n    grid-template-columns: repeat(4, 1fr);\n    gap: 20px;\n  }\n}\n\n@media (max-width: 992px) {\n  .movie-grid {\n    grid-template-columns: repeat(3, 1fr);\n    gap: 20px;\n  }\n}\n\n@media (max-width: 768px) {\n  .movie-grid {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 16px;\n    padding: 10px;\n  }\n}\n\n@media (max-width: 640px) {\n  .movie-grid {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 6px;\n  }\n\n  .content-wrapper {\n    padding-left: 0.3rem;\n    padding-right: 0.3rem;\n  }\n\n  h3 {\n    font-size: 0.85rem;\n    margin: 0.2rem 0;\n    line-height: 1.1;\n  }\n\n  .action-buttons-container {\n    padding: 4px;\n    height: auto;\n    min-height: 32px;\n    bottom: 0;\n  }\n\n  .action-button {\n    padding: 3px 5px;\n    font-size: 0.65rem;\n  }\n\n  .movie-card-container {\n    margin-bottom: 0.4rem;\n  }\n\n  .infinite-scroll-view {\n    padding: 8px;\n  }\n}\n\n@media (max-width: 480px) {\n  .movie-grid {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 6px;\n  }\n\n  h3 {\n    font-size: 0.8rem;\n    margin: 0.20rem 0;\n    line-height: 0.7;\n  }\n\n  .action-buttons-container {\n    padding: 4px;\n    min-height: 24px;\n  }\n\n  .action-button {\n    padding: 3px 4px;\n    font-size: 0.6rem;\n  }\n\n  .movie-card-container {\n    margin-bottom: 0.3rem;\n  }\n}\n\n/* 이미지 컨테이너에 대한 hover 효과 */\n:deep(.movie-card:hover img) {\n  transform: scale(1.05);\n  transition: transform 0.3s ease;\n}\n\n/* 포스터 오버레이 스타일 */\n.poster-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 80vh;\n  background: rgba(0, 0, 0, 0.9);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.3s ease;\n}\n\n.poster-overlay.show {\n  opacity: 1;\n  visibility: visible;\n}\n\n.poster-content {\n  position: relative;\n  display: flex;\n  max-width: 90vw;\n  max-height: 50vh;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);\n}\n\n.poster-content img {\n  max-height: 50vh;\n  object-fit: contain;\n}\n\n.poster-info {\n  padding: 30px;\n  min-width: 300px;\n  max-width: 400px;\n  overflow-y: auto;\n}\n\n.poster-info h2 {\n  font-size: 24px;\n  margin-bottom: 16px;\n  color: #333;\n}\n\n.release-date {\n  color: #666;\n  margin-bottom: 16px;\n}\n\n.overview {\n  line-height: 1.6;\n  color: #444;\n}\n\n.close-button {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background: rgba(0,0,0,0.5);\n  border: none;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.close-button:hover {\n  background: rgba(0,0,0,0.7);\n  transform: scale(1.1);\n}\n\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 32px 0;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.loading-text {\n  margin-top: 16px;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.end-message {\n  text-align: center;\n  padding: 32px;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.scroll-top-button {\n  position: fixed;\n  bottom: 32px;\n  right: 32px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  z-index: 50;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n}\n\n.scroll-top-button:hover {\n  background-color: #2980b9;\n  transform: scale(1.1);\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n@media (max-width: 768px) {\n  .poster-content {\n    flex-direction: column;\n  }\n\n  .poster-info {\n    min-width: unset;\n    max-width: unset;\n    width: 100%;\n  }\n}\n\n.movie-card-container {\n  position: relative;\n  border-radius: 12px;\n  overflow: hidden;\n  background-color: #141414;\n  transition: transform 0.3s ease;\n  aspect-ratio: 2/3;\n  height: 1000px;\n}\n\n.action-btn {\n  display: none !important;\n}\n/* 액션 버튼 컨테이너 스타일 */\n.action-buttons-container {\n  display: flex;\n  flex-direction: row;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  justify-content: space-between;\n  gap: 4px;\n  background: linear-gradient(to top, rgba(0, 0, 0, 0.9), transparent);\n  opacity: 0;\n  transform: translateY(10px);\n  transition: all 0.3s ease;\n  height: 600px;\n  z-index: 10;\n}\n\n.movie-card-container .action-buttons-container {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n/* 액션 버튼 공통 스타일 */\n.action-button {\n  align-items: center;\n  justify-content: center;\n  border-radius: 6px;\n  font-size: 0.8rem;\n  font-weight: 500;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  backdrop-filter: blur(4px);\n  color: white;\n}\n\n/* 찜하기 버튼 스타일 */\n:deep(.wishlist-button) {\n  background: rgba(229, 9, 20, 0.9);\n}\n\n:deep(.wishlist-button:hover) {\n  background: rgba(229, 9, 20, 1);\n  transform: translateY(-2px);\n}\n\n:deep(.wishlist-button.is-wishlisted) {\n  background: rgba(229, 9, 20, 0.7);\n}\n\n/* 상세정보 버튼 스타일 */\n.info-button {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.info-button:hover {\n  background: rgba(255, 255, 255, 0.2);\n  transform: translateY(-2px);\n}\n\n/* 버튼 아이콘 스타일 */\n.action-button i {\n  font-size: 1rem;\n}\n\n/* 모바일 최적화 */\n@media (max-width: 640px) {\n  .action-buttons-container {\n    padding: 12px;\n  }\n\n  .action-button {\n    padding: 6px;\n    font-size: 0.8rem;\n  }\n\n  .action-button i {\n    font-size: 0.9rem;\n  }\n}\n\n/* 아주 작은 화면에서는 아이콘만 표시 */\n@media (max-width: 480px) {\n  .action-button span {\n    display: none;\n  }\n\n  .action-button i {\n    margin: 0;\n  }\n\n  .action-button {\n    padding: 8px;\n  }\n}\n\n</style>","import script from \"./InfiniteScrollView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InfiniteScrollView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./InfiniteScrollView.vue?vue&type=style&index=0&id=2bec2dc9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2bec2dc9\"]])\n\nexport default __exports__","<template>\n  <div ref=\"gridContainer\" class=\"table-view\">\n    <!-- 그리드 레이아웃으로 영화 카드 배치 -->\n    <div class=\"movie-grid\">\n      <MovieCard\n        v-for=\"movie in movies\"\n        :key=\"movie.id\"\n        :movie=\"movie\"\n        @wishlist-updated=\"$emit('wishlist-updated', $event)\"\n        @show-detail=\"handleShowDetail\"\n        class=\"movie-card-animation\"\n      />\n    </div>\n\n    <!-- 페이지네이션 -->\n    <div v-if=\"movies.length > 0\" class=\"pagination-container\">\n      <button\n        @click=\"$emit('page-changed', 1)\"\n        :disabled=\"currentPage === 1\"\n        class=\"nav-btn\"\n      >\n        <i class=\"fas fa-angle-double-left\"></i>\n      </button>\n\n      <PaginationNav\n        :current-page=\"currentPage\"\n        :total-pages=\"totalPages\"\n        @page-change=\"page => $emit('page-changed', page)\"\n      />\n\n      <button\n        @click=\"$emit('page-changed', totalPages)\"\n        :disabled=\"currentPage === totalPages\"\n        class=\"nav-btn\"\n      >\n        <i class=\"fas fa-angle-double-right\"></i>\n      </button>\n    </div>\n  </div>\n\n  <!-- 포스터 상세 오버레이 -->\n    <div\n      v-if=\"selectedMovie\"\n      class=\"poster-overlay\"\n      :class=\"{ show: showOverlay }\"\n      @click=\"closeOverlay\"\n    >\n      <div class=\"poster-content\" @click.stop>\n        <img\n          :src=\"`https://image.tmdb.org/t/p/original${selectedMovie.poster_path}`\"\n          :alt=\"selectedMovie.title\"\n        />\n        <div class=\"poster-info\">\n          <h2>{{ selectedMovie.title }}</h2>\n          <p class=\"release-date\">개봉일: {{ selectedMovie.release_date }}</p>\n          <p class=\"rating\" v-if=\"selectedMovie.vote_average\">\n            평점: {{ Number(selectedMovie.vote_average).toFixed(1) }}\n          </p>\n          <p class=\"overview\">{{ selectedMovie.overview }}</p>\n        </div>\n        <button class=\"close-button\" @click=\"closeOverlay\">\n          <i class=\"fas fa-times\"></i>\n        </button>\n      </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport MovieCard from \"@/components/common/MovieCard.vue\"\nimport PaginationNav from \"@/components/common/PaginationNav.vue\"\n// import { fetchMovies } from \"@/utils/fetchMovies\";\n\nconst props = defineProps({\n  movies: {\n    type: Array,\n    required: true,\n    default: () => []  // 기본값 설정\n  },\n  currentPage: {\n    type: Number,\n    required: true\n  },\n  totalPages: {\n    type: Number,\n    required: true\n  },\n  // fetchUrl: {\n  //   type: String,\n  //   required: true\n  // },\n});\n\ndefineEmits(['page-changed', 'wishlist-updated', 'show-detail']);\n\nconst moviesPerPage = ref(20);\nconst isMobile = ref(window.innerWidth <= 768);\n\n// 포스터 오버레이 관련 상태 추가\nconst selectedMovie = ref(null);\nconst showOverlay = ref(false);\n\n// 상세 정보 표시 핸들러\nconst handleShowDetail = (movie) => {\n  selectedMovie.value = movie;\n  showOverlay.value = true;\n  document.body.style.overflow = 'hidden';\n};\n\n// 오버레이 닫기\nconst closeOverlay = () => {\n  showOverlay.value = false;\n  document.body.style.overflow = '';\n  setTimeout(() => {\n    selectedMovie.value = null;\n  }, 300);\n};\n\n</script>\n\n<style scoped>\n.table-view {\n  padding: 0.5rem;\n  width: 100%;\n  max-width: 1440px;\n  margin: 0 auto;\n}\n\n.movie-grid {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr); /* 5열 그리드 */\n  margin-bottom: 2rem;\n}\n\n.poster-content {\n  position: relative;\n  display: flex;\n  max-width: 90vw;\n  max-height: 70vh !important;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);\n\n}\n\n\n/* 반응형 그리드 */\n@media (max-width: 1200px) {\n  .movie-grid {\n    grid-template-columns: repeat(4, 1fr); /* 4열 */\n  }\n  :deep(.movie-card) {\n    max-width: 200px;\n  }\n}\n\n@media (max-width: 960px) {\n  .movie-grid {\n    grid-template-columns: repeat(3, 1fr); /* 3열 */\n  }\n  :deep(.movie-card) {\n    max-width: 180px;\n  }\n}\n\n@media (max-width: 720px) {\n  .movie-grid {\n    grid-template-columns: repeat(2, 1fr); /* 2열 */\n  }\n  :deep(.movie-card) {\n    max-width: 160px;\n  }\n}\n\n@media (max-width: 480px) {\n  .movie-grid {\n    grid-template-columns: repeat(1, 1fr); /* 1열 */\n  }\n  :deep(.movie-card) {\n    max-width: 200px;\n  }\n}\n\n/* 페이지네이션 스타일 */\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  margin-top: 7rem;\n  padding: 1rem;\n  background: grey;\n  border-radius: 8px;\n}\n\n.navigation-buttons {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.nav-btn {\n  padding: 0.5rem 1rem;\n  border: none;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n.nav-btn:hover:not(:disabled) {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.nav-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* MovieCard 스타일 */\n:deep(.movie-card) {\n  width: 100%;\n  aspect-ratio: 2/3; /* 포스터 비율 유지 */\n  max-width: 240px; /* 최대 너비 제한 */\n  margin: 0 auto; /* 카드 중앙 정렬 */\n}\n\n:deep(.movie-card img) {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n  transition: transform 0.2s;\n}\n\n:deep(.movie-card:hover img) {\n  transform: scale(1.05);\n}\n\n\n/* 페이지네이션 컴포넌트 스타일 오버라이드 */\n:deep(.pagination-button) {\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  margin: 0 0.25rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n:deep(.pagination-button:hover) {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n:deep(.pagination-button.active) {\n  background: #3b82f6;\n}\n\n:deep(.pagination-button:disabled) {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* 포스터 오버레이 스타일 추가 */\n.poster-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.9);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.3s ease;\n}\n\n.poster-overlay.show {\n  opacity: 1;\n  visibility: visible;\n}\n\n.poster-content {\n  position: relative;\n  display: flex;\n  max-width: 90vw;\n  max-height: 70vh;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);\n}\n\n.poster-content img {\n  max-height: 70vh;\n  object-fit: contain;\n}\n\n.poster-info {\n  padding: 30px;\n  min-width: 300px;\n  max-width: 400px;\n  overflow-y: auto;\n}\n\n.poster-info h2 {\n  font-size: 24px;\n  margin-bottom: 16px;\n  color: #333;\n}\n\n.release-date, .rating {\n  color: #666;\n  margin-bottom: 16px;\n}\n\n.overview {\n  line-height: 1.6;\n  color: #444;\n}\n\n.close-button {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background: rgba(0,0,0,0.5);\n  border: none;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.close-button:hover {\n  background: rgba(0,0,0,0.7);\n  transform: scale(1.1);\n}\n\n@media (max-width: 768px) {\n  .poster-content {\n    flex-direction: column;\n  }\n\n  .poster-info {\n    min-width: unset;\n    max-width: unset;\n    width: 100%;\n  }\n}\n</style>\n","import script from \"./TableView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TableView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TableView.vue?vue&type=style&index=0&id=6a1d3c1b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6a1d3c1b\"]])\n\nexport default __exports__","<template>\n  <div class=\"view-toggle-container flex space-x-2\">\n    <button\n      @click=\"changeView('table')\"\n      class=\"toggle-btn\"\n      :class=\"{ 'active': currentView === 'table' }\"\n    >\n      <div class=\"btn-background\" :class=\"{ 'show': currentView === 'table' }\"></div>\n      <i class=\"fas fa-table\"></i>\n    </button>\n    <button\n      @click=\"changeView('infinite')\"\n      class=\"toggle-btn\"\n      :class=\"{ 'active': currentView === 'infinite' }\"\n    >\n      <div class=\"btn-background\" :class=\"{ 'show': currentView === 'infinite' }\"></div>\n      <i class=\"fas fa-list\"></i>\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst props = defineProps({\n  initialView: {\n    type: String,\n    default: 'table'\n  }\n});\n\nconst emit = defineEmits(['viewType-changed']);\n\nconst currentView = ref(props.initialView);\n\nconst changeView = (view) => {\n  currentView.value = view;\n  emit('viewType-changed', view);\n};\n</script>\n\n<style scoped>\n.view-toggle-container {\n  display: flex;\n  gap: 10px;\n  background: rgba(255, 255, 255, 0.05);\n  padding: 5px;\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n}\n\n.toggle-btn {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  overflow: hidden;\n  color: #64748b;\n}\n.toggle-btn:hover {\n  color: #94a3b8;\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.toggle-btn.active {\n  color: white;\n}\n\n.toggle-btn:focus {\n  outline: none;\n  box-shadow: 0 0 0 2px #fff, 0 0 0 4px #3b82f6;\n}\n\n.btn-background {\n  position: absolute;\n  inset: 0;\n  background: linear-gradient(135deg, #3b82f6, #2563eb);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.btn-background.show {\n  opacity: 1;\n}\n\n.toggle-btn i {\n  position: relative;\n  z-index: 1;\n  font-size: 1.125rem;\n  transition: transform 0.3s ease;\n}\n.toggle-btn:hover i {\n  transform: translateY(-1px);\n}\n\n.toggle-btn:active {\n  transform: translateY(1px);\n}\n\n@media (max-width: 640px) {\n  .toggle-btn {\n    width: 36px;\n    height: 36px;\n  }\n\n  .toggle-btn i {\n    font-size: 1rem;\n  }\n}\n</style>","import script from \"./ViewToggle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ViewToggle.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ViewToggle.vue?vue&type=style&index=0&id=c72bf22a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c72bf22a\"]])\n\nexport default __exports__","'use strict';\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (obj, stringHandling) {\n  if (!stringHandling || typeof obj !== 'string') anObject(obj);\n  var method = getIteratorMethod(obj);\n  return getIteratorDirect(anObject(method !== undefined ? call(method, obj) : obj));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar getIteratorFlattenable = require('../internals/get-iterator-flattenable');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar iteratorClose = require('../internals/iterator-close');\nvar IS_PURE = require('../internals/is-pure');\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var mapper = this.mapper;\n  var result, inner;\n\n  while (true) {\n    if (inner = this.inner) try {\n      result = anObject(call(inner.next, inner.iterator));\n      if (!result.done) return result.value;\n      this.inner = null;\n    } catch (error) { iteratorClose(iterator, 'throw', error); }\n\n    result = anObject(call(this.next, iterator));\n\n    if (this.done = !!result.done) return;\n\n    try {\n      this.inner = getIteratorFlattenable(mapper(result.value, this.counter++), false);\n    } catch (error) { iteratorClose(iterator, 'throw', error); }\n  }\n});\n\n// `Iterator.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.flatmap\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE }, {\n  flatMap: function flatMap(mapper) {\n    anObject(this);\n    aCallable(mapper);\n    return new IteratorProxy(getIteratorDirect(this), {\n      mapper: mapper,\n      inner: null\n    });\n  }\n});\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.iterator.flat-map');\n"],"names":["useMovies","movies","ref","loading","error","totalPages","totalResults","currentPage","apiKey","localStorage","getItem","api","axios","create","baseURL","params","api_key","language","fetchPopularMovies","async","page","value","response","get","data","results","total_pages","total_results","console","log","hasMore","moviesCount","length","e","Error","message","fetchMoviesForTableView","pageCount","requests","Array","from","_","i","responses","Promise","all","allResults","flatMap","Math","ceil","getMoviesForPage","itemsPerPage","start","end","slice","loadMoreMovies","filterMoviesByGenre","genreId","with_genres","sort_by","searchMovies","query","trim","getMovieDetails","movieId","resetMovies","computed","isEmpty","props","__props","emit","__emit","startPage","half","floor","visiblePages","max","endPage","min","pages","push","showPrevGroup","showNextGroup","goToPage","__exports__","showScrollTop","handleScroll","window","scrollY","scrollPosition","innerHeight","documentHeight","document","documentElement","scrollHeight","scrollToTop","scrollTo","top","behavior","handleShowDetail","movie","id","selectedMovie","showOverlay","showPosterOverlay","body","style","overflow","closePosterOverlay","setTimeout","handleKeyDown","key","onMounted","addEventListener","onUnmounted","removeEventListener","innerWidth","closeOverlay","currentView","initialView","changeView","view","call","anObject","getIteratorDirect","getIteratorMethod","module","exports","obj","stringHandling","method","undefined","$","aCallable","getIteratorFlattenable","createIteratorProxy","iteratorClose","IS_PURE","IteratorProxy","result","inner","iterator","this","mapper","next","done","counter","target","proto","real","forced"],"sourceRoot":""}