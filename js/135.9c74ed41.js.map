{"version":3,"file":"js/135.9c74ed41.js","mappings":"6YA0BA,MAAMA,EAAQC,EAQRC,EAAgBC,QACLC,IAAXD,GAAmC,OAAXA,EAAwB,MAC7CE,OAAOF,GAAQG,QAAQ,G,OAKhCC,EAAAA,EAAAA,KAAM,IAAMP,EAAMQ,QAAQC,IACxBC,QAAQC,IAAI,qBAAsBF,EAAO,I,qxBCpC3C,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,oSCwEA,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,KACtBD,IAGA,MAAME,GAAWC,EAAAA,EAAAA,IAAI,SACfC,GAAgBD,EAAAA,EAAAA,IAAI,MACpBE,GAAYF,EAAAA,EAAAA,IAAI,KAEhB,OACJG,EAAM,YACNC,EAAW,WACXC,EAAU,QACVC,EAAO,mBACPC,IACEC,EAAAA,EAAAA,KAGEC,GAAUT,EAAAA,EAAAA,KAAI,GACdU,GAAiBV,EAAAA,EAAAA,IAAI,qBAErB,eAAEW,IAAmBC,EAAAA,EAAAA,KAGrBC,GAAab,EAAAA,EAAAA,KAAI,GACjBc,GAAUd,EAAAA,EAAAA,IAAI,GAEde,GAAgBC,EAAAA,EAAAA,KAAS,IACtBC,KAAKC,IAAI,GAAK,EAAKJ,EAAQK,MAAQ,OAGtCC,GAAoBJ,EAAAA,EAAAA,KAAS,IAC1BC,KAAKI,IAAI,IAAM,GAAOP,EAAQK,MAAQ,OAG/C,IAAIG,EACJ,MAAMC,EAAeA,KACfD,GACFE,OAAOC,qBAAqBH,GAG9BA,EAAgBE,OAAOE,uBAAsB,KAC3CZ,EAAQK,MAAQK,OAAOV,QACvBD,EAAWM,MAAQK,OAAOV,QAAU,EAAC,GACrC,GAGJa,EAAAA,EAAAA,KAAU,KACRH,OAAOI,iBAAiB,SAAUL,EAAc,CAAEM,SAAS,GAAO,KAOpEtC,EAAAA,EAAAA,IAAMa,GAAa0B,UACjBpC,QAAQC,IAAI,mBAAoBoC,EAAQ,IAI1C,MAAMC,EAAuBF,UAC3B,IACErB,EAAQU,OAAQ,EAChBT,EAAeS,MAAQ,gBAEvBpB,EAASoB,MAAQc,EACD,UAAZA,QACI1B,EAAmB,IAEzBL,EAAUiB,MAAQ,SACZe,IAEV,CAAE,MAAOC,GACLzC,QAAQ0C,MAAM,8BAA+BD,EACjD,CAAE,QACA1B,EAAQU,OAAQ,CAClB,GAIIkB,EAAmBP,UAEvB,GADDpC,QAAQC,IAAI,oBAAqB2C,GAC5BA,IAASlC,EAAYe,MAEzB,IACEV,EAAQU,OAAQ,EAChBT,EAAeS,MAAQ,GAAGmB,sBAEpB/B,EAAmB+B,GACzBd,OAAOe,SAAS,CAAEC,IAAK,EAAGC,SAAU,UACtC,CAAE,MAAON,GACPzC,QAAQ0C,MAAM,yBAA0BD,EAC1C,CAAE,QACA1B,EAAQU,OAAQ,CAClB,GAIIe,EAAiBJ,UAKrB,GAJApC,QAAQC,IAAI,sBACZD,QAAQC,IAAI,yBAA0Bc,EAAQU,OAC9CzB,QAAQC,IAAI,yBAA0BW,EAAQa,QAE1CV,EAAQU,OAAUb,EAAQa,MAK9B,IACEV,EAAQU,OAAQ,EAChBT,EAAeS,MAAQ,mBAEvBzB,QAAQC,IAAI,mBACZ,MAAM+C,QAAiBnC,EAAmBH,EAAYe,MAAQ,GAC9DzB,QAAQC,IAAI,gBAAiB+C,GAEzBA,GAAUC,SAEZzC,EAAUiB,MAAQ,IAAIjB,EAAUiB,SAAUuB,EAASC,SACnDvC,EAAYe,OAAS,EAGrBb,EAAQa,MAAQf,EAAYe,MAAQuB,EAASE,YAC7ClD,QAAQC,IAAI,yBAA0BW,EAAQa,SAE9Cb,EAAQa,OAAQ,EAChBzB,QAAQC,IAAI,4BAEhB,CAAE,MAAOwC,GACPzC,QAAQ0C,MAAM,6BAA8BD,EAC9C,CAAE,QACA1B,EAAQU,OAAQ,EAChBzB,QAAQC,IAAI,mBACd,MA7BED,QAAQC,IAAI,6BAA8Bc,EAAQU,MAAO,WAAYb,EAAQa,MA6B/E,EAMI0B,EAAwBrD,IAC5BmB,EAAenB,EAAM,EAIjBsD,EAAmBhB,UACvB,IACErB,EAAQU,OAAQ,EAChBT,EAAeS,MAAQ,sBAGvB,MAAMuB,QAAiBK,MACrB,sCAAsCC,aAAmBC,aAAaC,QAAQ,8BAEhFjD,EAAckB,YAAcuB,EAASS,MACvC,CAAE,MAAOf,GACP1C,QAAQ0C,MAAM,kBAAmBA,EACnC,CAAE,QACA3B,EAAQU,OAAQ,CAClB,G,OAIFQ,EAAAA,EAAAA,KAAUG,UACR,IACErB,EAAQU,OAAQ,EAChBT,EAAeS,MAAQ,0BAEjBZ,EAAmB,EAC3B,CAAE,MAAO4B,GACPzC,QAAQ0C,MAAM,iCAAkCD,EAClD,CAAE,QACA1B,EAAQU,OAAQ,CAClB,CACAK,OAAO4B,oBAAoB,SAAU7B,EAAa,I,qiCCtPpD,MAAM3B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://wsd02/./src/components/movie/MovieDetailModal.vue","webpack://wsd02/./src/components/movie/MovieDetailModal.vue?e843","webpack://wsd02/./src/views/PopularPage.vue","webpack://wsd02/./src/views/PopularPage.vue?ae27"],"sourcesContent":["\n<template>\n  <div class=\"modal-container\" @click.self=\"$emit('close')\">\n    <div class=\"modal-content\">\n      <div class=\"poster-section\">\n        <img\n          :src=\"`https://image.tmdb.org/t/p/w500${movie.poster_path}`\"\n          :alt=\"movie.title\"\n        />\n      </div>\n      <div class=\"info-section\">\n        <h2>{{ movie.title }}</h2>\n        <div class=\"movie-info\">\n          <p><strong>개봉일:</strong> {{ movie.release_date }}</p>\n          <p><strong>평점:</strong> {{ formatRating(movie.vote_average) }}</p>\n          <p class=\"overview\">{{ movie.overview }}</p>\n        </div>\n      </div>\n      <button class=\"close-button\" @click=\"$emit('close')\">\n        <i class=\"fas fa-times\"></i>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nconst props = defineProps({\n  movie: {\n    type: Object,\n    required: true\n  }\n});\n\n// 평점 포맷팅 함수\nconst formatRating = (rating) => {\n  if (rating === undefined || rating === null) return 'N/A';\n  return Number(rating).toFixed(1);\n};\n\n// 디버깅을 위한 watch 추가\nimport { watch } from 'vue';\nwatch(() => props.movie, (newVal) => {\n  console.log('모달 movie prop 변경됨:', newVal);\n});\n\n</script>\n\n<style scoped>\n.modal-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 90vh;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 12px;\n  max-width: 800px;\n  width: 90%;\n  display: flex;\n  position: relative;\n  max-height: 70vh; /* 최대 높이 축소 */\n  overflow: hidden;\n}\n\n.poster-section {\n  flex: 0 0 35%; /* 포스터 영역 비율 축소 */\n  background: #f0f0f0;\n}\n\n.poster-section img {\n  max-height: 70vh  !important;\n  -o-object-fit: contain;\n  object-fit: contain;\n}\n\n.poster-content {\n  position: relative;\n  display: flex;\n  max-width: 90vw;\n  max-height: 70vh !important;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);\n\n}\n.info-section {\n  flex: 1;\n  padding: 24px;\n  overflow-y: auto;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 16px;\n  color: #333;\n}\n\n.movie-info p {\n  margin-bottom: 12px;\n  line-height: 1.6;\n}\n\n.overview {\n  margin-top: 16px;\n  color: #666;\n}\n\n.close-button {\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.1);\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.close-button:hover {\n  background: rgba(0, 0, 0, 0.2);\n  transform: scale(1.1);\n}\n\n@media (max-width: 768px) {\n  .modal-content {\n    flex-direction: column;\n  }\n\n  .poster-section {\n    height: 200px;\n  }\n\n  .info-section {\n    padding: 16px;\n  }\n}\n</style>\n","import script from \"./MovieDetailModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MovieDetailModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MovieDetailModal.vue?vue&type=style&index=0&id=bd4d3ba4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bd4d3ba4\"]])\n\nexport default __exports__","<template>\n  <div class=\"popular-movies-container\">\n    <!-- 헤더 컴포넌트 -->\n    <PageHeader />\n\n    <!-- 로딩 컴포넌트 -->\n    <LoadingSpinner\n      :loading=\"loading\"\n      :message=\"'영화 정보를 불러오는 중입니다.'\"\n    />\n\n    <!-- 메인 컨텐츠 (헤더 높이만큼 여백) -->\n    <div class=\"content-wrapper mt-16 px-4 py-6\" :class=\"{ 'opacity-50': loading }\">\n      <!-- 뷰 토글 섹션 -->\n      <div\n        class=\"view-toggle-header\"\n        :class=\"{ 'header-scrolled': isScrolled }\"\n        :style=\"{\n          opacity: headerOpacity,\n          backgroundColor: `rgba(17, 17, 17, ${backgroundOpacity})`\n        }\"\n      >\n\n      <div class=\"contents\">\n<!--        <h1 class=\"text-2xl font-bold text-deepskyblue\">대세 콘텐츠</h1>-->\n        <ViewToggle\n          :initial-view=\"viewType\"\n          @viewType-changed=\"handleViewTypeChange\"\n        />\n      </div>\n      </div>\n\n      <!-- 뷰 타입에 따른 컨텐츠 표시 -->\n      <TableView\n        v-if=\"viewType === 'table'\"\n        :movies=\"movies\"\n        :current-page=\"currentPage\"\n        :total-pages=\"totalPages\"\n        @page-changed=\"handlePageChange\"\n        @wishlist-updated=\"handleWishlistUpdate\"\n        @show-detail=\"handleShowDetail\"\n      />\n\n\n      <InfiniteScrollView\n        v-else\n        :movies=\"allMovies\"\n        :loading=\"loading\"\n        :has-more=\"hasMore\"\n        @load-more=\"handleLoadMore\"\n        @wishlist-updated=\"handleWishlistUpdate\"\n        @show-detail=\"handleShowDetail\"\n      />\n    </div>\n\n\n    <!-- 영화 상세정보 모달 추가 -->\n    <MovieDetail\n      v-if=\"selectedMovie\"\n      :movie=\"selectedMovie\"\n      @close=\"selectedMovie = null\"\n      @wishlist-updated=\"handleWishlistUpdate\"\n    />\n  </div>\n\n</template>\n\n<script setup>\nimport {ref, onMounted, watch, computed, onUnmounted } from 'vue';\nimport PageHeader from '@/components/layout/PageHeader.vue';\nimport LoadingSpinner from '@/components/common/LoadingSpinner.vue';\nimport ViewToggle from '@/components/common/viewType/ViewToggle.vue';\nimport TableView from '@/components/common/viewType/TableView.vue';\nimport InfiniteScrollView from \"@/components/common/viewType/InfiniteScrollView.vue\";\nimport MovieDetail from '@/components/movie/MovieDetailModal.vue';\nimport {useMovies} from '@/composables/useMovies';\nimport {useWishlist} from '@/composables/useWishlist';\nimport {useAuth} from '@/composables/useAuth';\n\n// 인증 상태 확인\nconst { checkAuth } = useAuth();\ncheckAuth();\n\n// 상태 관리\nconst viewType = ref('table');\nconst selectedMovie = ref(null);\nconst allMovies = ref([]); // 무한 스크롤용 전체 영화 목록\n\nconst {\n  movies,\n  currentPage,\n  totalPages,\n  hasMore,\n  fetchPopularMovies,\n} = useMovies();\n\n// loading 상태 관리를 더 명확하게 정의\nconst loading = ref(false);\nconst loadingMessage = ref('영화 정보를 불러오는 중...');\n\nconst { updateWishlist } = useWishlist();\n\n// Add new refs for scroll handling\nconst isScrolled = ref(false)\nconst scrollY = ref(0)\n\nconst headerOpacity = computed(() => {\n  return Math.max(0.8, 1 - (scrollY.value / 400))\n})\n\nconst backgroundOpacity = computed(() => {\n  return Math.min(0.95, 0.7 + (scrollY.value / 400))\n})\n\nlet scrollTimeout\nconst handleScroll = () => {\n  if (scrollTimeout) {\n    window.cancelAnimationFrame(scrollTimeout)\n  }\n\n  scrollTimeout = window.requestAnimationFrame(() => {\n    scrollY.value = window.scrollY\n    isScrolled.value = window.scrollY > 30\n  })\n}\n\nonMounted(() => {\n  window.addEventListener('scroll', handleScroll, { passive: true })\n  // ... your existing onMounted logic\n})\n\n\n\n// 페이지 변경 감지\nwatch(currentPage, async (newPage) => {\n  console.log('Page changed to:', newPage)\n})\n\n// 뷰 타입 변경 핸들러\nconst handleViewTypeChange = async (newType) => {\n  try {\n    loading.value = true;\n    loadingMessage.value = '보기 방식 변경 중...';\n\n    viewType.value = newType;\n    if (newType === 'table') {\n      await fetchPopularMovies(1);\n    } else {\n      allMovies.value = [];\n      await handleLoadMore();\n    }\n  } catch (err) {\n      console.error('Failed to change view type:', err);\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 페이지 변경 핸들러\nconst handlePageChange = async (page) => {\n console.log('Changing to page:', page)\n  if (page === currentPage.value) return\n\n  try {\n    loading.value = true\n    loadingMessage.value = `${page}페이지로 이동 중...`;\n\n    await fetchPopularMovies(page)\n    window.scrollTo({ top: 0, behavior: 'smooth' })\n  } catch (err) {\n    console.error('Failed to change page:', err)\n  } finally {\n    loading.value = false\n  }\n};\n\n// 무한 스크롤 로드 더 보기 핸들러\nconst handleLoadMore = async () => {\n  console.log('LoadMore triggered');\n  console.log('Current loading state:', loading.value);\n  console.log('Current hasMore state:', hasMore.value);\n\n  if (loading.value || !hasMore.value) {\n    console.log('Loading blocked - loading:', loading.value, 'hasMore:', hasMore.value);\n    return;\n  }\n\n  try {\n    loading.value = true;\n    loadingMessage.value = '추가 영화를 불러오는 중...';\n\n    console.log('Loading started');\n    const response = await fetchPopularMovies(currentPage.value + 1);\n    console.log('API Response:', response);\n\n    if (response?.results) {\n      // 무한 스크롤일 때는 데이터 누적\n      allMovies.value = [...allMovies.value, ...response.results];\n      currentPage.value += 1;\n\n      // 다음 페이지가 있는지 판단하여 hasMore 업데이트\n      hasMore.value = currentPage.value < response.total_pages;\n      console.log('Updated hasMore state:', hasMore.value);\n    } else {\n      hasMore.value = false;\n      console.log('No more movies available');\n    }\n  } catch (err) {\n    console.error('Error loading more movies:', err);\n  } finally {\n    loading.value = false;\n    console.log('Loading finished');\n  }\n};\n\n\n\n// 위시리스트 업데이트 핸들러\nconst handleWishlistUpdate = (movie) => {\n  updateWishlist(movie);\n};\n\n// 영화 상세 정보 표시 핸들러\nconst handleShowDetail = async (movieId) => {\n  try {\n    loading.value = true;\n    loadingMessage.value = '영화 상세 정보를 불러오는 중...';\n\n    // TMDB API에서 영화 상세 정보 가져오기\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${localStorage.getItem('TMDb-Key')}&language=ko-KR`\n    );\n    selectedMovie.value = await response.json();\n  } catch (error) {\n    console.error('영화 상세 정보 로드 실패:', error);\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 초기 데이터 로드\nonMounted(async () => {\n  try {\n    loading.value = true;\n    loadingMessage.value = '대세 콘텐츠를 불러오는 중...';\n\n    await fetchPopularMovies(1)\n  } catch (err) {\n    console.error('Failed to load initial movies:', err)\n  } finally {\n    loading.value = false;\n  }\n  window.removeEventListener('scroll', handleScroll)\n})\n\n</script>\n\n<style scoped>\n.contents {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 6px;\n  margin-top: 60px;\n}\n.popular-movies-container {\n  min-height: 100vh;\n  background-color: rgb(17, 17, 17);\n}\n\n.content-wrapper {\n  max-width: 1440px;\n  margin: 0 auto;\n}\n\n.view-toggle-header {\n  position: sticky;\n  top: 64px;\n  z-index: 10;\n  transition: all 0.3s ease;\n  padding: 1rem;\n  backdrop-filter: blur(8px);\n  border-radius: 12px;\n  margin-bottom: 1.5rem;\n}\n\n.header-scrolled {\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n  padding: 0.75rem 1rem;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.contents {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 6px;\n  margin-top: 60px;\n}\n\n@media (max-width: 640px) {\n  .content-wrapper {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n\n  .view-toggle-header {\n    top: 56px;\n    padding: 0.75rem;\n  }\n\n  .header-scrolled {\n    padding: 0.5rem 0.75rem;\n  }\n}\n\n</style>","import script from \"./PopularPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PopularPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PopularPage.vue?vue&type=style&index=0&id=c6a079dc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c6a079dc\"]])\n\nexport default __exports__"],"names":["props","__props","formatRating","rating","undefined","Number","toFixed","watch","movie","newVal","console","log","__exports__","checkAuth","useAuth","viewType","ref","selectedMovie","allMovies","movies","currentPage","totalPages","hasMore","fetchPopularMovies","useMovies","loading","loadingMessage","updateWishlist","useWishlist","isScrolled","scrollY","headerOpacity","computed","Math","max","value","backgroundOpacity","min","scrollTimeout","handleScroll","window","cancelAnimationFrame","requestAnimationFrame","onMounted","addEventListener","passive","async","newPage","handleViewTypeChange","newType","handleLoadMore","err","error","handlePageChange","page","scrollTo","top","behavior","response","results","total_pages","handleWishlistUpdate","handleShowDetail","fetch","movieId","localStorage","getItem","json","removeEventListener"],"sourceRoot":""}