{"version":3,"file":"js/367.26e1123e.js","mappings":"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","sources":["webpack://wsd02/./src/components/common/PaginationNav.vue","webpack://wsd02/./src/components/common/PaginationNav.vue?031d","webpack://wsd02/./src/components/common/viewType/TableView.vue","webpack://wsd02/./src/components/common/viewType/TableView.vue?11ae","webpack://wsd02/./src/components/layout/ScrollToTop.vue","webpack://wsd02/./src/components/layout/ScrollToTop.vue?c6bf","webpack://wsd02/./src/components/movie/MovieDetailModal.vue","webpack://wsd02/./src/components/movie/MovieDetailModal.vue?e843","webpack://wsd02/./src/views/WishlistPage.vue","webpack://wsd02/./src/views/WishlistPage.vue?8aab"],"sourcesContent":["<template>\n  <div class=\"flex items-center justify-center gap-2 my-4\">\n    <!-- 이전 페이지 그룹 -->\n    <button\n      v-if=\"showPrevGroup\"\n      @click=\"goToPage(startPage - 1)\"\n      class=\"pagination-button\"\n      aria-label=\"이전 페이지 그룹\"\n    >\n      <i class=\"fas fa-chevron-left\"></i>\n    </button>\n\n    <!-- 첫 페이지 -->\n    <button\n      v-if=\"startPage > 1\"\n      @click=\"goToPage(1)\"\n      class=\"pagination-button\"\n    >\n      1\n    </button>\n\n     <!-- 첫 페이지 이후 줄임표 -->\n    <span v-if=\"startPage > 2\" class=\"px-2\">...</span>\n\n    <!-- 페이지 번호들 -->\n    <button\n      v-for=\"page in visiblePages\"\n      :key=\"page\"\n      @click=\"goToPage(page)\"\n      class=\"pagination-button\"\n      :class=\"{ 'bg-blue-500 text-white': page === currentPage }\"\n    >\n      {{ page }}\n    </button>\n\n    <!-- 마지막 페이지 이전 줄임표 -->\n    <span v-if=\"endPage < totalPages - 1\" class=\"px-2\">...</span>\n\n    <!-- 마지막 페이지 -->\n    <button\n      v-if=\"endPage < totalPages\"\n      @click=\"goToPage(totalPages)\"\n      class=\"pagination-button\"\n    >\n      {{ totalPages }}\n    </button>\n\n    <!-- 다음 페이지 그룹 -->\n    <button\n      v-if=\"showNextGroup\"\n      @click=\"goToPage(endPage + 1)\"\n      class=\"pagination-button\"\n      aria-label=\"다음 페이지 그룹\"\n    >\n      <i class=\"fas fa-chevron-right\"></i>\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\n\nconst props = defineProps({\n  currentPage: {\n    type: Number,\n    required: true\n  },\n  totalPages: {\n    type: Number,\n    required: true\n  },\n  visiblePages: {\n    type: Number,\n    default: 5\n  }\n});\n\nconst emit = defineEmits(['page-change']);\n\n// 시작 페이지 계산\nconst startPage = computed(() => {\n  const half = Math.floor(props.visiblePages / 2);\n  let start = props.currentPage - half;\n\n  if (start < 1) {\n    start = 1;\n  }\n\n  if (start + props.visiblePages - 1 > props.totalPages) {\n    start = Math.max(1, props.totalPages - props.visiblePages + 1);\n  }\n\n  return start;\n});\n\n// 끝 페이지 계산\nconst endPage = computed(() => {\n  return Math.min(startPage.value + props.visiblePages - 1, props.totalPages);\n});\n\n// 보여질 페이지 번호들\nconst visiblePages = computed(() => {\n  const pages = [];\n  for (let i = startPage.value; i <= endPage.value; i++) {\n    pages.push(i);\n  }\n  return pages;\n});\n\n// 이전/다음 그룹 버튼 표시 여부\nconst showPrevGroup = computed(() => startPage.value > 1);\nconst showNextGroup = computed(() => endPage.value < props.totalPages);\n\n// 페이지 이동 함수\nconst goToPage = (page) => {\n  if (page !== props.currentPage && page >= 1 && page <= props.totalPages) {\n    emit('page-change', page);\n  }\n};\n</script>\n\n<style scoped>\n.pagination-button {\n  @apply px-3 py-1 rounded-md transition-colors duration-200\n         hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500;\n}\n\n.pagination-button.active {\n  @apply bg-blue-500 text-white hover:bg-blue-600;\n}\n</style>\n","import script from \"./PaginationNav.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationNav.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PaginationNav.vue?vue&type=style&index=0&id=22a6a870&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-22a6a870\"]])\n\nexport default __exports__","<template>\n  <div ref=\"gridContainer\" class=\"table-view\">\n    <!-- 그리드 레이아웃으로 영화 카드 배치 -->\n    <div class=\"movie-grid\">\n      <MovieCard\n        v-for=\"movie in movies\"\n        :key=\"movie.id\"\n        :movie=\"movie\"\n        @wishlist-updated=\"$emit('wishlist-updated', $event)\"\n        @show-detail=\"handleShowDetail\"\n        class=\"movie-card-animation\"\n      />\n    </div>\n\n    <!-- 페이지네이션 -->\n    <div v-if=\"movies.length > 0\" class=\"pagination-container\">\n      <button\n        @click=\"$emit('page-changed', 1)\"\n        :disabled=\"currentPage === 1\"\n        class=\"nav-btn\"\n      >\n        <i class=\"fas fa-angle-double-left\"></i>\n      </button>\n\n      <PaginationNav\n        :current-page=\"currentPage\"\n        :total-pages=\"totalPages\"\n        @page-change=\"page => $emit('page-changed', page)\"\n      />\n\n      <button\n        @click=\"$emit('page-changed', totalPages)\"\n        :disabled=\"currentPage === totalPages\"\n        class=\"nav-btn\"\n      >\n        <i class=\"fas fa-angle-double-right\"></i>\n      </button>\n    </div>\n  </div>\n\n  <!-- 포스터 상세 오버레이 -->\n    <div\n      v-if=\"selectedMovie\"\n      class=\"poster-overlay\"\n      :class=\"{ show: showOverlay }\"\n      @click=\"closeOverlay\"\n    >\n      <div class=\"poster-content\" @click.stop>\n        <img\n          :src=\"`https://image.tmdb.org/t/p/original${selectedMovie.poster_path}`\"\n          :alt=\"selectedMovie.title\"\n        />\n        <div class=\"poster-info\">\n          <h2>{{ selectedMovie.title }}</h2>\n          <p class=\"release-date\">개봉일: {{ selectedMovie.release_date }}</p>\n          <p class=\"rating\" v-if=\"selectedMovie.vote_average\">\n            평점: {{ Number(selectedMovie.vote_average).toFixed(1) }}\n          </p>\n          <p class=\"overview\">{{ selectedMovie.overview }}</p>\n        </div>\n        <button class=\"close-button\" @click=\"closeOverlay\">\n          <i class=\"fas fa-times\"></i>\n        </button>\n      </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport MovieCard from \"@/components/common/MovieCard.vue\"\nimport PaginationNav from \"@/components/common/PaginationNav.vue\"\n// import { fetchMovies } from \"@/utils/fetchMovies\";\n\nconst props = defineProps({\n  movies: {\n    type: Array,\n    required: true,\n    default: () => []  // 기본값 설정\n  },\n  currentPage: {\n    type: Number,\n    required: true\n  },\n  totalPages: {\n    type: Number,\n    required: true\n  },\n  // fetchUrl: {\n  //   type: String,\n  //   required: true\n  // },\n});\n\ndefineEmits(['page-changed', 'wishlist-updated', 'show-detail']);\n\nconst moviesPerPage = ref(20);\nconst isMobile = ref(window.innerWidth <= 768);\n\n// 포스터 오버레이 관련 상태 추가\nconst selectedMovie = ref(null);\nconst showOverlay = ref(false);\n\n// 상세 정보 표시 핸들러\nconst handleShowDetail = (movie) => {\n  selectedMovie.value = movie;\n  showOverlay.value = true;\n  document.body.style.overflow = 'hidden';\n};\n\n// 오버레이 닫기\nconst closeOverlay = () => {\n  showOverlay.value = false;\n  document.body.style.overflow = '';\n  setTimeout(() => {\n    selectedMovie.value = null;\n  }, 300);\n};\n\n</script>\n\n<style scoped>\n.table-view {\n  padding: 0.5rem;\n  width: 100%;\n  max-width: 1440px;\n  margin: 0 auto;\n}\n\n.movie-grid {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr); /* 5열 그리드 */\n  margin-bottom: 2rem;\n}\n\n.poster-content {\n  position: relative;\n  display: flex;\n  max-width: 90vw;\n  max-height: 70vh !important;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);\n\n}\n\n\n/* 반응형 그리드 */\n@media (max-width: 1200px) {\n  .movie-grid {\n    grid-template-columns: repeat(4, 1fr); /* 4열 */\n  }\n  :deep(.movie-card) {\n    max-width: 200px;\n  }\n}\n\n@media (max-width: 960px) {\n  .movie-grid {\n    grid-template-columns: repeat(3, 1fr); /* 3열 */\n  }\n  :deep(.movie-card) {\n    max-width: 180px;\n  }\n}\n\n@media (max-width: 720px) {\n  .movie-grid {\n    grid-template-columns: repeat(2, 1fr); /* 2열 */\n  }\n  :deep(.movie-card) {\n    max-width: 160px;\n  }\n}\n\n@media (max-width: 480px) {\n  .movie-grid {\n    grid-template-columns: repeat(1, 1fr); /* 1열 */\n  }\n  :deep(.movie-card) {\n    max-width: 200px;\n  }\n}\n\n/* 페이지네이션 스타일 */\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  margin-top: 7rem;\n  padding: 1rem;\n  background: grey;\n  border-radius: 8px;\n}\n\n.navigation-buttons {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.nav-btn {\n  padding: 0.5rem 1rem;\n  border: none;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n.nav-btn:hover:not(:disabled) {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.nav-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* MovieCard 스타일 */\n:deep(.movie-card) {\n  width: 100%;\n  aspect-ratio: 2/3; /* 포스터 비율 유지 */\n  max-width: 240px; /* 최대 너비 제한 */\n  margin: 0 auto; /* 카드 중앙 정렬 */\n}\n\n:deep(.movie-card img) {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n  transition: transform 0.2s;\n}\n\n:deep(.movie-card:hover img) {\n  transform: scale(1.05);\n}\n\n\n/* 페이지네이션 컴포넌트 스타일 오버라이드 */\n:deep(.pagination-button) {\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  margin: 0 0.25rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n:deep(.pagination-button:hover) {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n:deep(.pagination-button.active) {\n  background: #3b82f6;\n}\n\n:deep(.pagination-button:disabled) {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* 포스터 오버레이 스타일 추가 */\n.poster-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.9);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.3s ease;\n}\n\n.poster-overlay.show {\n  opacity: 1;\n  visibility: visible;\n}\n\n.poster-content {\n  position: relative;\n  display: flex;\n  max-width: 90vw;\n  max-height: 70vh;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);\n}\n\n.poster-content img {\n  max-height: 70vh;\n  object-fit: contain;\n}\n\n.poster-info {\n  padding: 30px;\n  min-width: 300px;\n  max-width: 400px;\n  overflow-y: auto;\n}\n\n.poster-info h2 {\n  font-size: 24px;\n  margin-bottom: 16px;\n  color: #333;\n}\n\n.release-date, .rating {\n  color: #666;\n  margin-bottom: 16px;\n}\n\n.overview {\n  line-height: 1.6;\n  color: #444;\n}\n\n.close-button {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background: rgba(0,0,0,0.5);\n  border: none;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.close-button:hover {\n  background: rgba(0,0,0,0.7);\n  transform: scale(1.1);\n}\n\n@media (max-width: 768px) {\n  .poster-content {\n    flex-direction: column;\n  }\n\n  .poster-info {\n    min-width: unset;\n    max-width: unset;\n    width: 100%;\n  }\n}\n\n/* 아이폰 14 프로 맥스 전용 미디어 쿼리 (해상도 범위: 430px ~ 896px) */\n@media screen and (min-width: 430px) and (max-width: 896px) {\n  .movie-grid {\n    display: grid;\n    grid-template-columns: repeat(1, 1fr); /* 열 그리드로 변경 */\n    gap: 0.3rem; /* 카드 간 간격 추가 */\n    padding: 0.3rem; /* 그리드 내부 여백 추가 */\n    justify-items: flex-start; /* 카드 중앙 정렬 */\n  }\n\n  :deep(.movie-card) {\n    max-width: 260px; /* 카드의 최대 너비 설정 */\n    width: 40%; /* 카드가 그리드의 90%를 차지 */\n    height: auto; /* 높이는 콘텐츠에 맞게 조정 */\n    border-radius: 8px; /* 카드 모서리를 둥글게 설정 */\n    margin: 0 auto; /* 카드 중앙 정렬 */\n  }\n\n  .poster-content {\n    position: relative;\n    display: flex;\n    flex-direction: column; /* 세로 정렬 */\n    align-items: center; /* 콘텐츠를 수평 중앙 정렬 */\n    max-width: 80vw; /* 최대 너비 제한 */\n    max-height: 40vh; /* 최대 높이 제한 */\n    padding: 1rem; /* 내부 여백 추가 */\n    background: white;\n    border-radius: 12px;\n    overflow: hidden; /* 넘침 방지 */\n    box-shadow: 0 0 30px rgba(0, 0, 0, 0.5); /* 그림자 추가 */\n  }\n\n  .poster-content img {\n    max-width: 70%; /* 포스터 너비 줄이기 */\n    max-height: 30vh; /* 최대 높이 제한 */\n    object-fit: cover; /* 비율 유지하며 잘림 방지 */\n    margin-bottom: 1rem; /* 이미지와 버튼 간 간격 추가 */\n  }\n\n  .action-buttons-container {\n    display: flex; /* 버튼을 Flexbox로 정렬 */\n    justify-content: center; /* 버튼 중앙 정렬 */\n    gap: 0.75rem; /* 버튼 간 간격 추가 */\n    margin-top: 0.5rem; /* 포스터와 버튼 사이 간격 추가 */\n  }\n\n  .close-button {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    background: rgba(0, 0, 0, 0.5);\n    border: none;\n    color: white;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.3s ease;\n  }\n\n  .close-button:hover {\n    background: rgba(0, 0, 0, 0.7);\n    transform: scale(1.1);\n  }\n}\n\n\n\n</style>\n","import script from \"./TableView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TableView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TableView.vue?vue&type=style&index=0&id=5c8de6fc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5c8de6fc\"]])\n\nexport default __exports__","<script>\nexport default {\n  name: 'ScrollToTop',\n  data() {\n    return {\n      isVisible: false\n    }\n  },\n  mounted() {\n    window.addEventListener('scroll', this.toggleVisibility)\n  },\n  unmounted() {\n    window.removeEventListener('scroll', this.toggleVisibility)\n  },\n  methods: {\n    scrollToTop() {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    },\n    toggleVisibility() {\n      this.isVisible = window.pageYOffset > 300\n    }\n  },\n};\n</script>\n\n<template>\n  <transition name=\"fade\">\n    <button\n      v-show=\"isVisible\"\n      @click=\"scrollToTop\"\n      class=\"scroll-to-top\"\n      aria-label=\"Scroll to top\"\n    >\n      <i class=\"fas fa-arrow-up\"></i>\n    </button>\n  </transition>\n</template>\n\n<style scoped>\n.scroll-to-top {\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  z-index: 50;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  background-color: rgba(231, 76, 60, 0.9);\n  color: white;\n  border: none;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.scroll-to-top:hover {\n  background-color: rgba(192, 57, 43, 0.9);\n  transform: translateY(-3px);\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n}\n\n.scroll-to-top:active {\n  transform: translateY(-1px);\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n/* Font Awesome 아이콘 크기 조정 */\n.fas.fa-arrow-up {\n  font-size: 1.2rem;\n}\n</style>","import { render } from \"./ScrollToTop.vue?vue&type=template&id=11b54240&scoped=true\"\nimport script from \"./ScrollToTop.vue?vue&type=script&lang=js\"\nexport * from \"./ScrollToTop.vue?vue&type=script&lang=js\"\n\nimport \"./ScrollToTop.vue?vue&type=style&index=0&id=11b54240&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-11b54240\"]])\n\nexport default __exports__","\n<template>\n  <div class=\"modal-container\" @click.self=\"$emit('close')\">\n    <div class=\"modal-content\">\n      <div class=\"poster-section\">\n        <img\n          :src=\"`https://image.tmdb.org/t/p/w500${movie.poster_path}`\"\n          :alt=\"movie.title\"\n        />\n      </div>\n      <div class=\"info-section\">\n        <h2>{{ movie.title }}</h2>\n        <div class=\"movie-info\">\n          <p><strong>개봉일:</strong> {{ movie.release_date }}</p>\n          <p><strong>평점:</strong> {{ formatRating(movie.vote_average) }}</p>\n          <p class=\"overview\">{{ movie.overview }}</p>\n        </div>\n      </div>\n      <button class=\"close-button\" @click=\"$emit('close')\">\n        <i class=\"fas fa-times\"></i>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nconst props = defineProps({\n  movie: {\n    type: Object,\n    required: true\n  }\n});\n\n// 평점 포맷팅 함수\nconst formatRating = (rating) => {\n  if (rating === undefined || rating === null) return 'N/A';\n  return Number(rating).toFixed(1);\n};\n\n// 디버깅을 위한 watch 추가\nimport { watch } from 'vue';\nwatch(() => props.movie, (newVal) => {\n  console.log('모달 movie prop 변경됨:', newVal);\n});\n\n</script>\n\n<style scoped>\n.modal-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 90vh;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 12px;\n  max-width: 800px;\n  width: 90%;\n  display: flex;\n  position: relative;\n  max-height: 70vh; /* 최대 높이 축소 */\n  overflow: hidden;\n}\n\n.poster-section {\n  flex: 0 0 35%; /* 포스터 영역 비율 축소 */\n  background: #f0f0f0;\n}\n\n.poster-section img {\n  max-height: 70vh  !important;\n  -o-object-fit: contain;\n  object-fit: contain;\n}\n\n.poster-content {\n  position: relative;\n  display: flex;\n  max-width: 90vw;\n  max-height: 70vh !important;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);\n\n}\n.info-section {\n  flex: 1;\n  padding: 24px;\n  overflow-y: auto;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 16px;\n  color: #333;\n}\n\n.movie-info p {\n  margin-bottom: 12px;\n  line-height: 1.6;\n}\n\n.overview {\n  margin-top: 16px;\n  color: #666;\n}\n\n.close-button {\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.1);\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.close-button:hover {\n  background: rgba(0, 0, 0, 0.2);\n  transform: scale(1.1);\n}\n\n@media (max-width: 768px) {\n  .modal-content {\n    flex-direction: column;\n  }\n\n  .poster-section {\n    height: 200px;\n  }\n\n  .info-section {\n    padding: 16px;\n  }\n}\n</style>\n","import script from \"./MovieDetailModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MovieDetailModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MovieDetailModal.vue?vue&type=style&index=0&id=bd4d3ba4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bd4d3ba4\"]])\n\nexport default __exports__","<template>\n  <div class=\"page-wrapper\">\n    <PageHeader />\n\n    <!-- LoadingSpinner 추가 -->\n    <LoadingSpinner\n      :loading=\"loading\"\n      :message=\"loadingMessage\"\n      type=\"full\"\n    />\n\n    <div class=\"wishlist-container\" :class=\"{ 'opacity-50': loading }\">\n      <!-- 페이지 헤더 섹션 -->\n      <div class=\"header-section\">\n        <h1 class=\"header-title\">내가 찜한 콘텐츠</h1>\n        <div class=\"header-subtitle\">\n          <i class=\"fas fa-heart heart-icon\"></i>\n          <span>찜한 콘텐츠 {{ wishlistCount }}개</span>\n        </div>\n      </div>\n\n      <!-- 빈 위시리스트 상태 -->\n      <div v-if=\"wishlist.length === 0\" class=\"empty-state\">\n        <i class=\"fas fa-heart empty-icon\"></i>\n        <h2 class=\"empty-text\">아직 찜한 콘텐츠가 없습니다.</h2>\n        <router-link to=\"/\" class=\"browse-button\">\n          <i class=\"fas fa-film\"></i>\n          <span>콘텐츠 둘러보기</span>\n        </router-link>\n      </div>\n\n      <!-- TableView 컴포넌트로 위시리스트 표시 -->\n      <div v-if=\"!loading && wishlist.length > 0\" class=\"content-section\">\n        <TableView\n          :movies=\"paginatedWishlist\"\n          :current-page=\"currentPage\"\n          :total-pages=\"totalPages\"\n          @page-changed=\"handlePageChange\"\n          @wishlist-updated=\"handleWishlistUpdate\"\n          @show-detail=\"handleShowDetail\"\n        />\n      </div>\n    </div>\n\n    <!-- 영화 상세 모달 -->\n    <MovieDetailModal\n      v-if=\"selectedMovie\"\n      :movie=\"selectedMovie\"\n      @close=\"closeModal\"\n    />\n\n    <!-- 스크롤 탑 컴포넌트 -->\n    <ScrollToTop v-show=\"showScrollTop\" />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\nimport { useWishlist } from '@/composables/useWishlist';\nimport PageHeader from '@/components/layout/PageHeader.vue';\nimport ScrollToTop from '@/components/layout/ScrollToTop.vue';\nimport TableView from '@/components/common/viewType/TableView.vue';\nimport MovieDetailModal from '@/components/movie/MovieDetailModal.vue';\nimport MovieCard from '@/components/common/MovieCard.vue';\nimport PaginationNav from '@/components/common/PaginationNav.vue';\nimport LoadingSpinner from '@/components/common/LoadingSpinner.vue';\n\n// 로딩 상태 관리 추가\nconst loading = ref(false);\nconst loadingMessage = ref('위시리스트를 불러오는 중...');\n\nconst { wishlist, wishlistCount } = useWishlist();\nconst showScrollTop = ref(false);\nconst currentPage = ref(1);\nconst moviesPerPage = 20;\nconst selectedMovie = ref(null);\n\n// 페이지네이션 계산\nconst totalPages = computed(() => Math.ceil(wishlist.value.length / moviesPerPage));\n\n// 현재 페이지의 영화 목록\nconst paginatedWishlist = computed(() => {\n  const start = (currentPage.value - 1) * moviesPerPage;\n  const end = start + moviesPerPage;\n  return wishlist.value.slice(start, end);\n});\n\n// 스크롤 이벤트 핸들러\nconst handleScroll = () => {\n  showScrollTop.value = window.scrollY > 500;\n};\n\n// 페이지 변경 핸들러\nconst handlePageChange = (page) => {\n  loading.value = true;\n  loadingMessage.value = `${page}페이지로 이동 중...`;\n\n  try {\n    currentPage.value = page;\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  } finally {\n    loading.value = false;\n  }\n\n};\n\n// 위시리스트 업데이트 핸들러\nconst handleWishlistUpdate = () => {\n  loading.value = true;\n  loadingMessage.value = '위시리스트 업데이트 중...';\n\n  try { // 위시리스트가 업데이트되면 페이지 재계산\n    const maxPage = Math.ceil(wishlist.value.length / moviesPerPage);\n    if (currentPage.value > maxPage) {\n      currentPage.value = maxPage || 1;\n    }\n  } finally {\n    loading.value = false;\n  }\n\n};\n\n// 영화 상세 정보 모달 핸들러\nconst handleShowDetail = (movie) => {\n  loading.value = true;\n  loadingMessage.value = '영화 상세 정보를 불러오는 중...';\n\n  try {\n    selectedMovie.value = movie;\n    document.body.style.overflow = 'hidden';\n  } finally {\n    loading.value = false;\n  }\n\n};\n\n// 모달 닫기 핸들러\nconst closeModal = () => {\n  selectedMovie.value = null;\n  document.body.style.overflow = '';\n};\n\n// 초기 데이터 로드\nonMounted(async () => {\n  loading.value = true;\n  loadingMessage.value = '위시리스트를 불러오는 중...';\n\n  try {\n    window.addEventListener('scroll', handleScroll);\n  } finally {\n    loading.value = false;\n  }\n});\n\nonUnmounted(() => {\n  window.removeEventListener('scroll', handleScroll);\n});\n</script>\n\n<style scoped>\n.page-wrapper {\n  min-height: 100vh;\n  background: linear-gradient(to bottom, #1a1a1a, #0a0a0a);\n  color: #ffffff;\n}\n\n.wishlist-container {\n  max-width: 1440px;\n  margin: 0 auto;\n  padding: 2rem 1.5rem;\n  padding-top: 6rem;\n  transition: opacity 0.3s ease;\n}\n\n/* 헤더 섹션 스타일링 */\n.header-section {\n  position: relative;\n  margin-bottom: 3rem;\n  padding-bottom: 1.5rem;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.header-title {\n  font-size: 2.5rem;\n  font-weight: 700;\n  background: linear-gradient(to right, #ff4d4d, #f9cb28);\n  -webkit-background-clip: text;\n  color: transparent;\n  margin-bottom: 0.5rem;\n}\n\n.header-subtitle {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #9ca3af;\n  font-size: 1.1rem;\n}\n\n.heart-icon {\n  color: #ff4d4d;\n  animation: pulse 2s infinite;\n}\n\n/* 빈 상태 스타일링 */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 4rem 0;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 1rem;\n  backdrop-filter: blur(10px);\n}\n\n.empty-icon {\n  font-size: 3rem;\n  color: #ff4d4d;\n  margin-bottom: 1.5rem;\n  opacity: 0.6;\n}\n\n.empty-text {\n  font-size: 1.25rem;\n  color: #9ca3af;\n  margin-bottom: 2rem;\n}\n\n.table-view {\n  padding: 0 !important;\n}\n.movie-grid {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr); /* 5열 그리드 */\n  gap: 0.5rem;\n  margin-bottom: 2rem;\n  padding: 1rem;\n}\n.browse-button {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  padding: 0.75rem 1.5rem;\n  background: linear-gradient(to right, #ff4d4d, #f9cb28);\n  border-radius: 2rem;\n  color: white;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(255, 77, 77, 0.3);\n}\n\n.browse-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 20px rgba(255, 77, 77, 0.4);\n}\n\n.browse-button i {\n  font-size: 1.1rem;\n}\n\n/* 콘텐츠 섹션 스타일링 */\n.content-section {\n  position: relative;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 1rem;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n\n/* 애니메이션 */\n@keyframes pulse {\n  0% { transform: scale(1); }\n  50% { transform: scale(1.1); }\n  100% { transform: scale(1); }\n}\n\n/* 반응형 디자인 */\n@media (max-width: 768px) {\n .wishlist-container {\n   padding: 1rem;\n   padding-top: 5rem;\n }\n\n .header-title {\n   font-size: 2rem;\n }\n\n .content-section {\n   padding: 0.5rem;\n }\n}\n\n@media (max-width: 640px) {\n .wishlist-container {\n   padding: 0.75rem;\n   padding-top: 4.5rem;\n }\n\n .header-section {\n   margin-bottom: 2rem;\n   padding-bottom: 1rem;\n }\n\n .header-title {\n   font-size: 1.85rem;\n }\n}\n\n@media (max-width: 480px) {\n .wishlist-container {\n   padding: 0.5rem;\n   padding-top: 4rem;\n }\n\n .header-title {\n   font-size: 1.75rem;\n }\n\n .empty-state {\n   padding: 2.5rem 0.75rem;\n }\n\n .browse-button {\n   padding: 0.5rem 1rem;\n   font-size: 0.85rem;\n }\n}\n\n@media (max-width: 430px) {\n .wishlist-container {\n   padding: 0.25rem;\n   padding-top: 3.5rem;\n }\n\n .header-title {\n   font-size: 1.5rem;\n }\n\n .header-subtitle {\n   font-size: 0.9rem;\n }\n\n .empty-state {\n   padding: 2rem 0.5rem;\n }\n}\n\n/* 모달 스크롤 방지 */\n:global(body.modal-open) {\n  overflow: hidden;\n}\n\n/* opacity 클래스 추가 */\n.opacity-50 {\n  opacity: 0.5;\n}\n\n@media screen and (max-width: 430px) {\n  .wishlist-container {\n    padding: 1rem; /* 컨테이너 내부 여백 조정 */\n    overflow: hidden; /* 컨테이너 내부 콘텐츠가 넘치지 않도록 설정 */\n  }\n\n  .movie-card {\n    height: auto; /* 높이를 콘텐츠에 맞게 자동 조정 */\n    margin: 0 auto; /* 카드가 컨테이너 중앙에 위치하도록 설정 */\n    padding: 0.5rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background: rgba(255, 255, 255, 0.03);\n    border-radius: 0.5rem;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n    overflow: hidden; /* 카드 내 요소가 밖으로 나오는 것을 방지 */\n    max-width: 90%; /* 카드가 부모 컨테이너 너비를 넘지 않도록 제한 */\n  }\n\n  :deep(.movie-card img) {\n    width: 40%; /* 이미지 너비를 줄임 */\n    max-width: 90px; /* 너무 커지지 않도록 최대 크기 제한 */\n    height: auto; /* 이미지 비율 유지 */\n    border-radius: 0.5rem;\n    object-fit: cover; /* 비율을 유지하며 잘림 방지 */\n  }\n\n  .movie-title {\n    font-size: 0.9rem;\n    text-align: center; /* 텍스트 중앙 정렬 */\n    margin-top: 0.5rem;\n  }\n\n  .release-date {\n    font-size: 0.8rem;\n    color: #9ca3af;\n    margin-top: 0.3rem;\n  }\n\n  .action-buttons-container {\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n    margin-top: 0.5rem;\n  }\n\n  .action-button {\n    width: 36px; /* 버튼 크기 조정 */\n    height: 36px;\n    font-size: 0.8rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n\n</style>","import script from \"./WishlistPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WishlistPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./WishlistPage.vue?vue&type=style&index=0&id=1541e37c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1541e37c\"]])\n\nexport default __exports__"],"names":["props","__props","emit","__emit","startPage","computed","half","Math","floor","visiblePages","start","currentPage","totalPages","max","endPage","min","value","pages","i","push","showPrevGroup","showNextGroup","goToPage","page","__exports__","ref","window","innerWidth","selectedMovie","showOverlay","handleShowDetail","movie","document","body","style","overflow","closeOverlay","setTimeout","_createBlock","_Transition","name","default","_withCtx","_createElementVNode","onClick","_cache","args","$options","scrollToTop","class","$data","isVisible","_","data","mounted","addEventListener","this","toggleVisibility","unmounted","removeEventListener","methods","scrollTo","top","behavior","pageYOffset","render","formatRating","rating","undefined","Number","toFixed","watch","newVal","console","log","moviesPerPage","loading","loadingMessage","wishlist","wishlistCount","useWishlist","showScrollTop","ceil","length","paginatedWishlist","end","slice","handleScroll","scrollY","handlePageChange","handleWishlistUpdate","maxPage","closeModal","onMounted","async","onUnmounted"],"sourceRoot":""}